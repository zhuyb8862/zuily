<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zuily.banner.dao.BannerMapper" >
  <resultMap id="BaseResultMap" type="com.zuily.banner.bean.Banner" >
    <id column="bid" property="bid" jdbcType="INTEGER" />
    <result column="btitle" property="btitle" jdbcType="CHAR" />
    <result column="bdsc" property="bdsc" jdbcType="CHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="lookunm" property="lookunm" jdbcType="INTEGER" />
    <result column="border" property="border" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bid, btitle, bdsc, state, lookunm, border, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zuily.banner.bean.BannerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from banner
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from banner
    where bid = #{bid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from banner
    where bid = #{bid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zuily.banner.bean.BannerExample" >
    delete from banner
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zuily.banner.bean.Banner" useGeneratedKeys="true" keyProperty="bid">
    insert into banner (bid, btitle, bdsc, 
      state, lookunm, border, 
      type)
    values (#{bid,jdbcType=INTEGER}, #{btitle,jdbcType=CHAR}, #{bdsc,jdbcType=CHAR}, 
      #{state,jdbcType=TINYINT}, #{lookunm,jdbcType=INTEGER}, #{border,jdbcType=INTEGER}, 
      #{type,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zuily.banner.bean.Banner" >
    insert into banner
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bid != null" >
        bid,
      </if>
      <if test="btitle != null" >
        btitle,
      </if>
      <if test="bdsc != null" >
        bdsc,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="lookunm != null" >
        lookunm,
      </if>
      <if test="border != null" >
        border,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bid != null" >
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="btitle != null" >
        #{btitle,jdbcType=CHAR},
      </if>
      <if test="bdsc != null" >
        #{bdsc,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="lookunm != null" >
        #{lookunm,jdbcType=INTEGER},
      </if>
      <if test="border != null" >
        #{border,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zuily.banner.bean.BannerExample" resultType="java.lang.Integer" >
    select count(*) from banner
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update banner
    <set >
      <if test="record.bid != null" >
        bid = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.btitle != null" >
        btitle = #{record.btitle,jdbcType=CHAR},
      </if>
      <if test="record.bdsc != null" >
        bdsc = #{record.bdsc,jdbcType=CHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.lookunm != null" >
        lookunm = #{record.lookunm,jdbcType=INTEGER},
      </if>
      <if test="record.border != null" >
        border = #{record.border,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update banner
    set bid = #{record.bid,jdbcType=INTEGER},
      btitle = #{record.btitle,jdbcType=CHAR},
      bdsc = #{record.bdsc,jdbcType=CHAR},
      state = #{record.state,jdbcType=TINYINT},
      lookunm = #{record.lookunm,jdbcType=INTEGER},
      border = #{record.border,jdbcType=INTEGER},
      type = #{record.type,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zuily.banner.bean.Banner" >
    update banner
    <set >
      <if test="btitle != null" >
        btitle = #{btitle,jdbcType=CHAR},
      </if>
      <if test="bdsc != null" >
        bdsc = #{bdsc,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="lookunm != null" >
        lookunm = #{lookunm,jdbcType=INTEGER},
      </if>
      <if test="border != null" >
        border = #{border,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
    </set>
    where bid = #{bid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zuily.banner.bean.Banner" >
    update banner
    set btitle = #{btitle,jdbcType=CHAR},
      bdsc = #{bdsc,jdbcType=CHAR},
      state = #{state,jdbcType=TINYINT},
      lookunm = #{lookunm,jdbcType=INTEGER},
      border = #{border,jdbcType=INTEGER},
      type = #{type,jdbcType=CHAR}
    where bid = #{bid,jdbcType=INTEGER}
  </update>
</mapper>